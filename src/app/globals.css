@tailwind base;
@tailwind components;
@tailwind utilities;

@import "../styles/tokens.css";

/* Force light UI everywhere (fixes iOS Safari dark-mode inversion) */
:root { color-scheme: light; }
html { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }
/* Use explicit light colors so we don't rely on dark-mode tokens */
body { background:#ffffff; color:#111111; }

.container { @apply mx-auto px-6; }
.stack { @apply mx-auto; max-width: 40rem; }

.eyebrow {
  font-size: var(--eyebrow-size);
  color: rgb(var(--color-muted));
}
.hero-title {
  font-size: var(--hero-size);
  font-style: italic;
  font-weight: 700;
  letter-spacing: -0.01em;
  line-height: 1.08;
}
.fine { font-size: var(--fine-size); color: rgb(var(--color-muted)); }

.underline-brand {
  text-decoration: underline;
  text-underline-offset: 6px;
  text-decoration-thickness: 2px;
  text-decoration-color: rgb(var(--color-brand));
}

/* Light, readable input on iOS (including Autofill) */
.pill-input {
  height: 48px;
  width: 100%;
  border-radius: 9999px;
  border: 1px solid rgb(var(--color-border));
  background: rgba(255,255,255,.96);
  padding: 0 20px;
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.9);
  transition: border-color .16s ease, background .16s ease, box-shadow .16s ease;
  color:#111111;                         /* text color */
  -webkit-text-fill-color:#111111;       /* iOS text color */
  caret-color: rgb(var(--color-brand));
  color-scheme: light;                    /* keep input in light mode */
}
.pill-input::placeholder { color: rgb(140 140 140); opacity: 1; }
.pill-input:focus {
  outline: none;
  border-color: rgb(198 198 198);
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.95);
}
/* iOS Autofill fixes */
.pill-input:-webkit-autofill,
.pill-input:-webkit-autofill:hover,
.pill-input:-webkit-autofill:focus {
  -webkit-text-fill-color:#111111 !important;
  caret-color: rgb(var(--color-brand)) !important;
  box-shadow: 0 0 0px 1000px rgba(255,255,255,.96) inset !important;
  -webkit-box-shadow: 0 0 0px 1000px rgba(255,255,255,.96) inset !important;
}

/* Send button micro-interactions */
.btn-circle {
  position: relative;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background: #111111;
  color: #ffffff;
  display: grid;
  place-items: center;
  box-shadow: 0 1px 0 rgba(0,0,0,.04), 0 10px 25px rgba(0,0,0,.04);
  transition: transform .18s ease, opacity .2s ease, box-shadow .18s ease;
  overflow: hidden;
}
.btn-circle:hover {
  transform: translateY(-1px) scale(1.03);
  box-shadow: 0 2px 0 rgba(0,0,0,.04), 0 14px 30px rgba(0,0,0,.06);
}
.btn-circle:active {
  transform: scale(.965);
  box-shadow: inset 0 2px 6px rgba(0,0,0,.12), 0 6px 16px rgba(0,0,0,.06);
}
/* halo */
.btn-circle::before {
  content:"";
  position:absolute; inset:-2px; border-radius:50%;
  background: radial-gradient(60% 60% at 50% 50%, rgba(var(--color-brand), .22), rgba(var(--color-brand), 0) 60%);
  transform: scale(.6); opacity:0; filter: blur(4px);
  transition: transform .28s ease, opacity .28s ease, filter .28s ease;
  z-index:0;
}
.btn-circle:hover::before { opacity:.75; transform:scale(1); filter:blur(6px); }
.btn-circle:active::before { opacity:.9; transform:scale(.92); filter:blur(8px); }
/* sheen */
.btn-circle::after {
  content:"";
  position:absolute; top:-30%; bottom:-30%; width:40%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,.28), transparent);
  transform: translateX(-120%) rotate(20deg);
  transition: transform .6s ease;
  z-index:0;
}
.btn-circle:hover::after { transform: translateX(120%) rotate(20deg); }

/* sent pulse */
@keyframes haloPulse {
  0% { opacity:.65; transform:scale(.7); filter:blur(8px); }
  60%{ opacity:.35; transform:scale(1.08); filter:blur(10px); }
  100%{ opacity:0; transform:scale(1.25); filter:blur(14px); }
}
.btn-circle.sent { transform:none; box-shadow:0 1px 0 rgba(0,0,0,.04), 0 10px 25px rgba(0,0,0,.04); }
.btn-circle.sent::after { opacity:0; }
.btn-circle.sent::before { opacity:1; transform:scale(1); animation: haloPulse .6s ease-out forwards; }

/* Typewriter caret */
@keyframes caretBlink { 0%,40%{opacity:1} 50%,90%{opacity:0} 100%{opacity:1} }
.caret {
  width:1px; height:.9em; background: rgb(var(--color-brand));
  display:inline-block; margin-left:3px; vertical-align:-.05em;
  animation: caretBlink 1s steps(1,end) infinite;
}

/* Minimal spinner */
@keyframes spin { to { transform: rotate(360deg); } }
.spinner {
  width:16px; height:16px; border-radius:9999px;
  border:2px solid rgba(var(--color-brand), .35);
  border-top-color: rgb(var(--color-brand));
  animation: spin .6s linear infinite;
}

/* Reduce motion */
@media (prefers-reduced-motion: reduce) {
  .btn-circle, .btn-circle::before, .btn-circle::after, .caret, .spinner {
    transition: none !important;
    animation: none !important;
  }
}

